 /* ============================
   üñºÔ∏è TBH Digital Solutions - Standard Portfolio Gallery
   Aligned with Brand Guide & Root Variables
============================ */

 /* ============================
   üéõÔ∏è Gallery Container & Layout
============================ */

 .gallery {
     display: flex;
     flex-direction: column;
     gap: clamp(var(--spacing-lg), 3vw, var(--spacing-xl));
     width: 100%;
 }

 /* ============================
   üîç Search & Filter Controls
============================ */

 .controls {
     display: flex;
     flex-direction: column;
     gap: var(--spacing-md);
     padding: clamp(var(--spacing-md), 2.5vw, var(--spacing-lg));
     background: var(--bg-surface);
     border: 1px solid var(--border-subtle);
     border-radius: var(--radius-lg);
 }

 /* Search Section */
 .searchSection {
     display: flex;
     flex-direction: column;
     gap: var(--spacing-sm);
 }

 .searchInputWrapper {
     position: relative;
     display: flex;
     align-items: center;
 }

 .searchIcon {
     position: absolute;
     left: var(--spacing-sm);
     width: 20px;
     height: 20px;
     color: var(--text-secondary);
     pointer-events: none;
     z-index: 2;
 }

 .searchInput {
     width: 100%;
     padding: var(--spacing-sm) var(--spacing-md);
     padding-left: 40px;
     padding-right: 40px;
     background: var(--bg-input);
     border: 1px solid var(--border-subtle);
     border-radius: var(--radius-md);
     color: var(--text-primary);
     font-family: var(--font-body);
     font-size: var(--font-size-body);
     transition: var(--transition-fast);
 }

 .searchInput:focus {
     outline: 2px solid var(--accent-primary);
     outline-offset: 2px;
     border-color: var(--accent-primary);
 }

 .searchInput::placeholder {
     color: var(--text-tertiary);
 }

 .clearSearch {
     position: absolute;
     right: var(--spacing-sm);
     width: 24px;
     height: 24px;
     background: none;
     border: none;
     color: var(--text-secondary);
     cursor: pointer;
     border-radius: var(--radius-sm);
     display: flex;
     align-items: center;
     justify-content: center;
     transition: var(--transition-fast);
     z-index: 2;
 }

 .clearSearch:hover {
     color: var(--text-primary);
     background: var(--bg-elevated);
 }

 .clearSearch svg {
     width: 16px;
     height: 16px;
 }

 /* Filters Section */
 .filtersSection {
     display: flex;
     flex-direction: column;
     gap: var(--spacing-md);
 }

 .filterGroup {
     display: flex;
     flex-direction: column;
     gap: var(--spacing-xs);
 }

 .filterLabel {
     font-family: var(--font-heading);
     font-size: var(--font-size-small);
     font-weight: 600;
     color: var(--text-accent);
     margin: 0;
 }

 .filterButtons {
     display: flex;
     gap: var(--spacing-xs);
     flex-wrap: wrap;
 }

 .filterButton {
     padding: var(--spacing-xs) var(--spacing-sm);
     background: var(--bg-elevated);
     border: 1px solid var(--border-subtle);
     border-radius: var(--radius-md);
     color: var(--text-secondary);
     font-family: var(--font-body);
     font-size: var(--font-size-small);
     font-weight: 500;
     cursor: pointer;
     transition: var(--transition-fast);
     white-space: nowrap;
 }

 .filterButton:hover {
     background: var(--bg-surface);
     border-color: var(--border-accent);
     color: var(--text-primary);
 }

 .filterButton.active {
     background: var(--accent-primary);
     border-color: var(--accent-primary);
     color: var(--text-inverse);
 }

 .tagFilters {
     display: flex;
     gap: var(--spacing-xs);
     flex-wrap: wrap;
 }

 .tagFilter {
     padding: 4px var(--spacing-sm);
     background: var(--bg-elevated);
     border: 1px solid var(--border-subtle);
     border-radius: var(--radius-full);
     color: var(--text-secondary);
     font-family: var(--font-body);
     font-size: var(--font-size-caption);
     font-weight: 500;
     cursor: pointer;
     transition: var(--transition-fast);
     white-space: nowrap;
 }

 .tagFilter:hover {
     background: var(--bg-surface);
     border-color: var(--border-accent);
     color: var(--text-primary);
 }

 .tagFilter.active {
     background: var(--accent-primary);
     border-color: var(--accent-primary);
     color: var(--text-inverse);
 }

 .clearFilters {
     align-self: flex-start;
     padding: var(--spacing-xs) var(--spacing-md);
     background: var(--bg-elevated);
     border: 1px solid var(--border-subtle);
     border-radius: var(--radius-md);
     color: var(--text-secondary);
     font-family: var(--font-body);
     font-size: var(--font-size-small);
     font-weight: 500;
     cursor: pointer;
     transition: var(--transition-fast);
 }

 .clearFilters:hover {
     background: var(--accent-primary);
     border-color: var(--accent-primary);
     color: var(--text-inverse);
 }

 /* ============================
   üìä Results Info
============================ */

 .resultsInfo {
     display: flex;
     align-items: center;
     justify-content: space-between;
     padding-bottom: var(--spacing-sm);
     border-bottom: 1px solid var(--border-subtle);
 }

 .resultsCount {
     font-family: var(--font-body);
     font-size: var(--font-size-small);
     color: var(--text-secondary);
 }

 /* ============================
   üéØ Gallery Grid System
============================ */

 .grid {
     display: grid;
     gap: clamp(var(--spacing-md), 2.5vw, var(--spacing-lg));
     width: 100%;
 }

 /* Grid Variants */
 .grid.grid {
     grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
 }

 .grid.masonry {
     grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
     grid-auto-rows: max-content;
 }

 .grid.list {
     grid-template-columns: 1fr;
     gap: var(--spacing-md);
 }

 /* Column Variants */
 .columns-1 .grid {
     grid-template-columns: 1fr;
 }

 .columns-2 .grid {
     grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
 }

 .columns-3 .grid {
     grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
 }

 .columns-4 .grid {
     grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
 }

 /* ============================
   üÉè Portfolio Cards
============================ */

 .card {
     display: flex;
     flex-direction: column;
     background: var(--bg-surface);
     border: 1px solid var(--border-subtle);
     border-radius: var(--radius-lg);
     overflow: hidden;
     cursor: pointer;
     transition: var(--transition-standard);
     position: relative;
     height: 100%;
 }

 .card:hover {
     border-color: var(--border-accent);
     box-shadow: var(--shadow-md);
     transform: translateY(-2px);
 }

 .card:focus {
     outline: 2px solid var(--accent-primary);
     outline-offset: 2px;
 }

 .card.featured {
     border-color: var(--accent-primary);
     box-shadow: var(--shadow-sm);
 }

 .card.featured::before {
     content: '';
     position: absolute;
     top: 0;
     left: 0;
     right: 0;
     height: 3px;
     background: var(--accent-primary);
     z-index: 1;
 }

 /* Card Image Section */
 .cardImage {
     position: relative;
     width: 100%;
     aspect-ratio: 16 / 9;
     overflow: hidden;
     background: var(--bg-primary);
 }

 .image {
     width: 100%;
     height: 100%;
     object-fit: cover;
     opacity: 0;
     transition: opacity var(--transition-standard);
 }

 .image.loaded {
     opacity: 1;
 }

 .imagePlaceholder {
     position: absolute;
     inset: 0;
     display: flex;
     align-items: center;
     justify-content: center;
     background: var(--bg-primary);
 }

 .placeholderSpinner {
     width: 32px;
     height: 32px;
     border: 2px solid var(--border-subtle);
     border-top: 2px solid var(--accent-primary);
     border-radius: 50%;
     animation: spin 1s linear infinite;
 }

 @keyframes spin {
     0% {
         transform: rotate(0deg);
     }

     100% {
         transform: rotate(360deg);
     }
 }

 .imageError {
     position: absolute;
     inset: 0;
     display: flex;
     align-items: center;
     justify-content: center;
     background: var(--bg-primary);
     color: var(--text-tertiary);
 }

 .imageError svg {
     width: 48px;
     height: 48px;
 }

 /* Card Overlay */
 .cardOverlay {
     position: absolute;
     inset: 0;
     background: linear-gradient(to bottom,
             rgba(6, 5, 18, 0) 0%,
             rgba(6, 5, 18, 0.3) 70%,
             rgba(6, 5, 18, 0.8) 100%);
     display: flex;
     flex-direction: column;
     justify-content: space-between;
     padding: var(--spacing-sm);
     opacity: 0;
     transition: opacity var(--transition-fast);
 }

 .card:hover .cardOverlay {
     opacity: 1;
 }

 .mediaTypeIndicator {
     align-self: flex-start;
 }

 .badge {
     display: inline-flex;
     align-items: center;
     padding: 4px 8px;
     background: rgba(6, 5, 18, 0.9);
     border: 1px solid var(--border-subtle);
     border-radius: var(--radius-sm);
     color: var(--text-primary);
     font-family: var(--font-body);
     font-size: var(--font-size-caption);
     font-weight: 600;
     backdrop-filter: blur(4px);
     -webkit-backdrop-filter: blur(4px);
 }

 .badge[data-type="video"] {
     border-color: #FF6B6B;
     color: #FF6B6B;
 }

 .badge[data-type="interactive"] {
     border-color: var(--accent-primary);
     color: var(--accent-primary);
 }

 .badge[data-type="pdf"] {
     border-color: #96CEB4;
     color: #96CEB4;
 }

 .featuredBadge {
     align-self: flex-end;
     display: flex;
     align-items: center;
     gap: 4px;
     padding: 4px 8px;
     background: rgba(14, 175, 251, 0.9);
     border-radius: var(--radius-sm);
     color: var(--text-inverse);
     font-family: var(--font-body);
     font-size: var(--font-size-caption);
     font-weight: 600;
     backdrop-filter: blur(4px);
     -webkit-backdrop-filter: blur(4px);
 }

 .featuredBadge svg {
     width: 12px;
     height: 12px;
 }

 /* Card Body */
 .cardBody {
     display: flex;
     flex-direction: column;
     gap: var(--spacing-xs);
     padding: clamp(var(--spacing-sm), 2vw, var(--spacing-md));
     flex: 1;
 }

 .cardTitle {
     font-family: var(--font-heading);
     font-size: clamp(var(--font-size-body), 1.3vw, var(--font-size-h4));
     font-weight: 700;
     color: var(--text-accent);
     margin: 0;
     line-height: var(--line-height-heading);
     display: -webkit-box;
     -webkit-line-clamp: 2;
     -webkit-box-orient: vertical;
     overflow: hidden;
 }

 .cardClient {
     font-family: var(--font-body);
     font-size: var(--font-size-small);
     color: var(--text-secondary);
     margin: 0;
     font-weight: 600;
 }

 .cardDescription {
     font-family: var(--font-body);
     font-size: var(--font-size-small);
     color: var(--text-secondary);
     margin: 0;
     line-height: var(--line-height-body);
     display: -webkit-box;
     -webkit-line-clamp: 3;
     -webkit-box-orient: vertical;
     overflow: hidden;
 }

 /* Metrics */
 .metrics {
     display: flex;
     gap: var(--spacing-sm);
     margin-top: var(--spacing-xs);
 }

 .metric {
     display: flex;
     flex-direction: column;
     align-items: center;
     padding: var(--spacing-xs);
     background: var(--bg-elevated);
     border-radius: var(--radius-sm);
     min-width: 60px;
 }

 .metricValue {
     font-family: var(--font-heading);
     font-size: var(--font-size-small);
     font-weight: 700;
     color: var(--accent-primary);
     margin: 0;
 }

 .metricLabel {
     font-family: var(--font-body);
     font-size: var(--font-size-caption);
     color: var(--text-tertiary);
     margin: 0;
     text-align: center;
 }

 /* Card Meta & Tags */
 .cardMeta {
     display: flex;
     gap: 4px;
     flex-wrap: wrap;
     margin-top: auto;
     padding-top: var(--spacing-xs);
 }

 .tag {
     display: inline-flex;
     align-items: center;
     padding: 2px 6px;
     background: var(--bg-elevated);
     border: 1px solid var(--border-subtle);
     border-radius: var(--radius-sm);
     color: var(--text-tertiary);
     font-family: var(--font-body);
     font-size: var(--font-size-caption);
     font-weight: 500;
 }

 /* ============================
   üö´ Empty States
============================ */

 .emptyState {
     display: flex;
     align-items: center;
     justify-content: center;
     min-height: 400px;
     padding: var(--spacing-xl);
 }

 .emptyStateContent {
     display: flex;
     flex-direction: column;
     align-items: center;
     gap: var(--spacing-md);
     text-align: center;
     max-width: 400px;
 }

 .emptyStateIcon {
     width: 64px;
     height: 64px;
     color: var(--text-tertiary);
 }

 .emptyStateText {
     font-family: var(--font-body);
     font-size: var(--font-size-body);
     color: var(--text-secondary);
     margin: 0;
 }

 .clearFiltersButton {
     padding: var(--spacing-sm) var(--spacing-md);
     background: var(--accent-primary);
     border: none;
     border-radius: var(--radius-md);
     color: var(--text-inverse);
     font-family: var(--font-heading);
     font-size: var(--font-size-small);
     font-weight: 600;
     cursor: pointer;
     transition: var(--transition-fast);
 }

 .clearFiltersButton:hover {
     background: var(--accent-hover);
     transform: translateY(-1px);
 }

 /* ============================
   üì± Responsive Design
============================ */

 /* Tablet */
 @media (max-width: 1024px) {
     .controls {
         padding: var(--spacing-md);
     }

     .columns-3 .grid,
     .columns-4 .grid {
         grid-template-columns: repeat(auto-fit, minmax(260px, 1fr));
     }

     .filtersSection {
         gap: var(--spacing-sm);
     }
 }

 /* Mobile */
 @media (max-width: 768px) {
     .gallery {
         gap: var(--spacing-md);
     }

     .controls {
         padding: var(--spacing-sm);
     }

     .grid {
         grid-template-columns: 1fr !important;
         gap: var(--spacing-md);
     }

     .filterGroup {
         gap: var(--spacing-xs);
     }

     .filterButtons {
         gap: 6px;
     }

     .filterButton {
         font-size: var(--font-size-caption);
         padding: 6px var(--spacing-xs);
     }

     .tagFilters {
         gap: 4px;
     }

     .tagFilter {
         font-size: 10px;
         padding: 3px 6px;
     }

     .cardBody {
         padding: var(--spacing-sm);
     }

     .metrics {
         gap: 6px;
     }

     .metric {
         min-width: 50px;
         padding: 6px;
     }
 }

 /* Small Mobile */
 @media (max-width: 480px) {
     .card {
         margin: 0 calc(-1 * var(--spacing-xs));
     }

     .controls {
         margin: 0 calc(-1 * var(--spacing-xs));
     }

     .emptyState {
         min-height: 300px;
         padding: var(--spacing-lg);
     }

     .emptyStateIcon {
         width: 48px;
         height: 48px;
     }
 }

 /* ============================
   ‚ôø Accessibility & Focus States
============================ */

 .card:focus-visible {
     outline: 2px solid var(--accent-primary);
     outline-offset: 2px;
 }

 .searchInput:focus-visible,
 .filterButton:focus-visible,
 .tagFilter:focus-visible,
 .clearFilters:focus-visible,
 .clearFiltersButton:focus-visible {
     outline: 2px solid var(--accent-primary);
     outline-offset: 2px;
 }

 /* High contrast mode support */
 @media (prefers-contrast: high) {
     .card {
         border-width: 2px;
     }

     .card.featured {
         border-width: 3px;
     }

     .filterButton.active,
     .tagFilter.active {
         border-width: 2px;
     }
 }

 /* Reduced motion support */
 @media (prefers-reduced-motion: reduce) {

     .card,
     .image,
     .cardOverlay,
     .filterButton,
     .tagFilter,
     .clearFilters,
     .clearFiltersButton,
     .placeholderSpinner {
         transition: none;
         animation: none;
     }

     .card:hover {
         transform: none;
     }

     .clearFiltersButton:hover {
         transform: none;
     }

     .placeholderSpinner {
         border-top-color: var(--accent-primary);
     }
 }

 /* ============================
   üé® List Variant Overrides
============================ */

 .list .card {
     flex-direction: row;
     height: auto;
 }

 .list .cardImage {
     width: 200px;
     flex-shrink: 0;
     aspect-ratio: 4 / 3;
 }

 .list .cardBody {
     flex: 1;
     justify-content: flex-start;
 }

 @media (max-width: 640px) {
     .list .card {
         flex-direction: column;
     }

     .list .cardImage {
         width: 100%;
     }
 }