/* Brand-aligned CTA row using the shared Button atom.
   Consumes tokens from packages-unified.module.css → unified-theme.css/root.css.
   Contract classes: row, alignStart|alignCenter|alignEnd, sizeSm|sizeMd
*/

/* Root layout — grid, never stacks --------------------------------------- */
.row {
    /* spacing scale (overridden by sizeSm/sizeMd) */
    --_gap: var(--spacing-sm, 0.75rem);

    display: grid;
    grid-auto-flow: column;
    /* keep items in one row */
    grid-auto-columns: max-content;
    /* shrink-wrap by default */
    align-items: center;
    justify-content: flex-start;
    gap: var(--_gap);

    inline-size: 100%;
    min-inline-size: 0;
    color: var(--pkg-text, var(--text-primary));
    text-wrap: pretty;

    /* Container queries to adapt sizing without stacking */
    container-type: inline-size;
}

/* Alignment helpers ------------------------------------------------------ */
.alignStart {
    justify-content: flex-start;
    text-align: start;
}

.alignCenter {
    justify-content: center;
    text-align: center;
}

.alignEnd {
    justify-content: flex-end;
    text-align: end;
}

/* Density helpers -------------------------------------------------------- */
.sizeSm {
    --_gap: var(--spacing-xs, 0.5rem);
}

.sizeMd {
    --_gap: var(--spacing-sm, 0.75rem);
}

/* Button children (via Button atom → .btn class) ------------------------- */
.row> :global(.btn) {
    /* Prevent ultra-narrow buttons but allow compression in tight spaces */
    min-inline-size: clamp(9.5rem, 28cqi, 12.5rem);
    inline-size: auto;
    align-self: center;
    justify-self: stretch;
    text-align: center;
}

/* Tight containers: keep side-by-side, make columns equal width ---------- */
@container (max-width: 26.25rem) {

    /* ≈420px */
    .row {
        grid-auto-columns: 1fr;
        /* equal columns, still one row */
        gap: var(--spacing-xs, 0.5rem);
    }

    .row> :global(.btn) {
        min-inline-size: auto;
        /* let grid control width */
        inline-size: 100%;
    }
}

/* Wider containers: small affordance bump -------------------------------- */
@container (min-width: 48rem) {
    .row {
        gap: var(--spacing-md, 1rem);
    }

    .row> :global(.btn) {
        min-inline-size: clamp(10rem, 22cqi, 14rem);
    }
}

/* Viewport fallback when container queries aren’t supported -------------- */
@media (max-width: 420px) {
    .row {
        grid-auto-columns: 1fr;
        gap: var(--spacing-xs, 0.5rem);
    }

    .row :global(.btn) {
        inline-size: 100%;
        min-inline-size: auto;
    }
}

/* Safe areas (iOS) ------------------------------------------------------- */
@supports (padding: max(0px)) {
    .row {
        padding-inline: max(0px, env(safe-area-inset-left));
    }
}

/* High-contrast / forced colors ----------------------------------------- */
@media (forced-colors: active) {
    .row> :global(.btn) {
        box-shadow: none;
    }
}

/* Motion/accessibility ---------------------------------------------------- */
@media (prefers-reduced-motion: reduce) {
    .row * {
        transition: none !important;
    }
}

/* Print: avoid excessive spacing / full-width buttons -------------------- */
@media print {
    .row {
        gap: 0.4rem;
    }

    .row> :global(.btn) {
        min-inline-size: auto;
        inline-size: auto;
        box-shadow: none !important;
    }
}