/* BundleCardFrame.module.css
   - CSS Modules safe (no :root / :global)
   - Uses shared tokens from /src/styles/packages-unified.module.css
   - Bundle-specific accents fall back to generic card tokens
*/

.root {
    width: 100%;
    background: var(--card-bg);
    color: var(--card-fg);
    border-radius: var(--radius-xl);
    transition:
        box-shadow var(--transition-med),
        transform var(--transition-med),
        border-color var(--transition-med),
        background var(--transition-med);
    display: flex;
    flex-direction: column;
    text-align: left;

    /* equal-height in grids when .stretch is applied */
    min-height: 0;

    /* start outlined as transparent; variants control border/shadow */
    border: 1px solid transparent;
}

/* Variants */
.elevated {
    box-shadow: var(--card-shadow-rest, var(--shadow-sm));
}

.outlined {
    border-color: var(--card-border);
}

.ghost {
    background: transparent;
    border-color: transparent;
}

/* Padding scales */
.pad-none {
    padding: 0;
}

.pad-sm {
    padding: var(--spacing-sm);
}

.pad-md {
    padding: var(--spacing-md);
}

.pad-lg {
    padding: var(--spacing-lg);
}

/* Height lock */
.stretch {
    height: 100%;
}

/* Hover effects (for interactive wrappers only) */
.hoverLift:is(a, button):not(:disabled):hover {
    transform: translateY(-1px);
    box-shadow: var(--card-shadow-hover, var(--shadow-lift));
    background: var(--card-hover-bg);
}

.hoverLift:is(a, button):active {
    transform: translateY(0);
}

/* Focus ring (bundle accent → card fallback) */
.root:focus-visible {
    outline: none;
    box-shadow: 0 0 0 3px var(--bundle-ring, var(--card-ring));
}

/* Selected emphasis (bundle accent → card fallback) */
.selected {
    border-color: var(--bundle-selected, var(--card-selected));
    box-shadow:
        0 0 0 1px var(--bundle-selected, var(--card-selected)) inset,
        var(--card-shadow-rest, var(--shadow-sm));
}

/* Disabled/muted */
.disabled {
    opacity: 0.6;
    cursor: not-allowed;
}