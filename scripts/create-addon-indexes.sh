#!/usr/bin/env bash
# scripts/create-addon-indexes.sh
# Generate index.ts for add-on service folders so they export a default AddOn[].
# Creates an empty stub when no .ts files are present.
#
# Usage:
#   chmod +x scripts/create-addon-indexes.sh
#   ./scripts/create-addon-indexes.sh
#   ./scripts/create-addon-indexes.sh --force

set -euo pipefail

FORCE=0
if [[ "${1:-}" == "--force" || "${1:-}" == "-f" ]]; then
  FORCE=1
fi

# Add-on service folders to process
DIRS=(
  "src/data/packages/add-ons/marketing-add-ons"
  "src/data/packages/add-ons/seo-add-ons"
  "src/data/packages/add-ons/video-production-add-ons"
  "src/data/packages/add-ons/web-development-add-ons"
)

to_var() {
  local base="$1"
  base="${base//[^a-zA-Z0-9]/_}"   # safe identifier
  [[ "$base" =~ ^[0-9] ]] && base="_${base}"
  echo "$base"
}

write_index() {
  local dir="$1"
  local file="${dir}/index.ts"

  mkdir -p "$dir"

  # Collect .ts files (excluding index.ts)
  mapfile -t files < <(find "$dir" -maxdepth 1 -type f -name "*.ts" ! -name "index.ts" | sort)

  if [[ -f "$file" && $FORCE -eq 0 ]]; then
    echo "⚠️  ${file} exists — skipped (use --force to overwrite)"
    return
  fi

  local IMPORTS=""
  local VARS=()

  if [[ ${#files[@]} -gt 0 ]]; then
    for fpath in "${files[@]}"; do
      base="$(basename "$fpath" .ts)"
      var="$(to_var "$base")"
      IMPORTS+="import ${var} from \"./${base}\";\n"
      VARS+=( "$var" )
    done
  fi

  # Pretty array entries
  local LIST_ENTRIES=""
  if [[ ${#VARS[@]} -gt 0 ]]; then
    for v in "${VARS[@]}"; do
      LIST_ENTRIES+="  ${v},\n"
    done
  fi

  cat > "$file" <<TS
// Auto-generated by create-addon-indexes.sh
// Exports a default AddOn[] for this service folder.
// Each file in this directory should export a default AddOn object.

import type { AddOn } from "../../_types/packages.types";
${IMPORTS%\\n}

const LIST: AddOn[] = [
${LIST_ENTRIES%\\n}
];

export const MAP: Record<string, AddOn> = Object.fromEntries(LIST.map(a => [a.id, a]));

export default LIST;

// (Optional) Re-export the type for convenience
export type { AddOn } from "../../_types/packages.types";
TS

  if [[ ${#files[@]} -eq 0 ]]; then
    echo "✅ wrote empty stub ${file} (no add-on .ts files found)"
  else
    echo "✅ wrote ${file} (${#files[@]} add-on file(s))"
  fi
}

for d in "${DIRS[@]}"; do
  write_index "$d"
done

echo "🎉 Done."
