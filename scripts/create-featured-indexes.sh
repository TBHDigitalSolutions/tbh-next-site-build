#!/usr/bin/env bash
# scripts/create-featured-indexes.sh
# Generate index.ts for Featured/* folders so each exports default string[] of bundle slugs.
# If a slugs.txt exists in a folder, its non-empty lines are used to seed the array.
#
# Usage:
#   chmod +x scripts/create-featured-indexes.sh
#   ./scripts/create-featured-indexes.sh
#   ./scripts/create-featured-indexes.sh --force

set -euo pipefail

FORCE=0
if [[ "${1:-}" == "--force" || "${1:-}" == "-f" ]]; then
  FORCE=1
fi

DIRS=(
  "src/data/packages/Featured/content-production-featured"
  "src/data/packages/Featured/lead-generation-featured"
  "src/data/packages/Featured/marketing-featured"
  "src/data/packages/Featured/seo-featured"
  "src/data/packages/Featured/video-production-featured"
  "src/data/packages/Featured/web-development-featured"
)

emit_ts() {
  local out="$1"
  shift
  local slugs=( "$@" )

  # Build TS array entries (quoted)
  local entries=""
  if [[ ${#slugs[@]} -gt 0 ]]; then
    for s in "${slugs[@]}"; do
      entries+="  \"${s}\",\n"
    done
  fi

  cat > "$out" <<'TS'
// Auto-generated by create-featured-indexes.sh
// Export a default string[] of curated bundle slugs for this service.
// Add or reorder as needed to control storefront rails.

const SLUGS: string[] = [
TS
  # append entries block safely (need to keep variable expansion here)
  printf "%b" "${entries%\\n}\n" >> "$out"

  cat >> "$out" <<'TS'
];

export default SLUGS;

// Optional named export for convenience
export const FEATURED = SLUGS;
TS
}

process_dir() {
  local dir="$1"
  local outfile="${dir}/index.ts"

  mkdir -p "$dir"

  if [[ -f "$outfile" && $FORCE -eq 0 ]]; then
    echo "⚠️  ${outfile} exists — skipped (use --force to overwrite)"
    return
  fi

  # If slugs.txt exists, read its non-empty, non-comment lines
  local slugs=()
  if [[ -f "${dir}/slugs.txt" ]]; then
    while IFS= read -r line || [[ -n "$line" ]]; do
      line="${line%%\#*}"           # strip inline comments starting with '#'
      line="$(echo "$line" | xargs)" # trim
      [[ -z "$line" ]] && continue
      slugs+=( "$line" )
    done < "${dir}/slugs.txt"
  fi

  emit_ts "$outfile" "${slugs[@]}"
  if [[ ${#slugs[@]} -gt 0 ]]; then
    echo "✅ wrote ${outfile} (${#slugs[@]} slug(s) from slugs.txt)"
  else
    echo "✅ wrote ${outfile} (empty stub — add slugs later)"
  fi
}

for d in "${DIRS[@]}"; do
  process_dir "$d"
done

echo "🎉 Done."
