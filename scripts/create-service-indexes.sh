#!/usr/bin/env bash
# scripts/create-service-indexes.sh
# Create (or overwrite with --force) index.ts files for service folders that
# re-export the packages list from the service-specific *-packages.ts file.

set -euo pipefail

FORCE=0
if [[ "${1:-}" == "--force" || "${1:-}" == "-f" ]]; then
  FORCE=1
fi

# dir|module (module is the file (without .ts) that exports the ServicePackage[])
ITEMS=(
  "src/data/packages/Services/marketing-services|marketing-packages"
  "src/data/packages/Services/seo-services|seo-services-packages"
  "src/data/packages/Services/video-production|video-production-packages"
  "src/data/packages/Services/web-development|web-development-packages"
)

create_index() {
  local dir="$1"
  local mod="$2"
  local file="${dir}/index.ts"

  mkdir -p "$dir"

  if [[ -f "$file" && $FORCE -eq 0 ]]; then
    echo "⚠️  ${file} exists — skipped (use --force to overwrite)"
    return
  fi

  cat > "$file" <<TS
// Auto-generated by create-service-indexes.sh
// Re-exports the default list of ServicePackage items for this service.
// Keep service packages in "./${mod}.ts" and import this folder as the service root.
//
// Example consumer:
//   import packages from "@/data/packages/Services/$(basename "$dir")";

export { default } from "./${mod}";
TS

  echo "✅ wrote ${file}"
}

for item in "${ITEMS[@]}"; do
  IFS='|' read -r DIR MOD <<< "$item"
  create_index "$DIR" "$MOD"
done

echo "🎉 Done."
